
public class All_Collection_Class {
	Array List: - 
	Array List is class in Java. It allows us to store multiple objects. 
	Points to Note: - 
	•      Array list is dynamic array, which means it will grow and shrink automatically.
	•      Array list allows us to store duplicate elements.
	•      Array list store data based on index.
	•      Array list internally usages array.
	•      Array list maintains insertion order.
	•      Array list are not thread safe (not synchronized).
	•      Manipulation is slow because a lot of shifting needs to be 
	•      Retrievals is fast in Array list.
	•      Array list allows us to store any kind of data.
	 void add(int index, Object element)   It is used to insert the specified element at the specified position index in a list.
	•      boolean addAll(Collection c)     It is used to append all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
	•      void clear()  It is used to remove all of the elements from this list.
	•      int lastIndexOf(Object o)            It is used to return the index in this list of the last occurrence of the specified element, or -1 if the list does not contain this element.

	 List list = new ArrayList();
	                        list.add(2);
	                        list.add("2");
	                        list.add("test");
	                        list.add(true);
	                        list.add('c');
	                        list.add(9.80);
	                        System.out.println(list);}} 
							
	------------------------------------------------------------------------------------------------------------------------
	Iterators in Java 
	Iterator is used to iterator over collection of objects.
	Iterator is interface. 
	package Test;
	import java.util.ArrayList;
	import java.util.Iterator;
	public class Example2 {         
	      /**
	     * Returns { true} if the iteration has more elements.
	     * (In other words, returns {true} if {next} would
	     * return an element rather than throwing an exception.)
	     *
	     * return {code true} if the iteration has more elements
	     */
	            public static void main(String[] args) {
	                        ArrayList<Integer> array = new ArrayList<Integer>();
	                        array.add(3);
	                        array.add(4);
	                        array.add(5); 
	                        Iterator<Integer> itr = array.iterator();
	                        while(itr.hasNext()){
	                                    System.out.println(itr.next());
	                        }
	            } } 


}
put Call

Request
[
{ "Name": "test",
  "surname": "Singh"
  }
 ]
 
 payload from dev team. convert to pojo class(updatepersonpojo)
 a method to updatepersondetials which accept payload value
 and there create updatepersonpojo object and set all payload
 jsonobject  and accept set arraylist value
 and under requestapecification we use to pass 
   contenttype, accept,body,header 
   
   and then put operation.
 